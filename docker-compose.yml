version: '3.8'

services:
  frontend:
    build: 
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rishabh
      - MYSQL_DATABASE=smarthome
      - MONGODB_URI=mongodb://mongodb:27017/myreview
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - mysql
      - mongodb
      - elasticsearch
    volumes:
      - ./Backend/uploads:/usr/src/app/uploads
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rishabh
      MYSQL_DATABASE: smarthome
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=docker-cluster
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  mongodb-data:
    driver: local
  elasticsearch-data:
    driver: local
